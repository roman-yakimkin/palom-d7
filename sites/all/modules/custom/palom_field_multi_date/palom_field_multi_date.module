<?php

/**
 * Implements hook_field_widget_info().
 */
function palom_field_multi_date_field_widget_info() {
  return [
    'palom_multi_date_widget' => [
      'label' => t('A multidate widget for palomniki.su'),
      'field types' => ['date', 'datestamp', 'datetime'],
      'behaviors' => [
        'multiple values' => FIELD_BEHAVIOR_CUSTOM,
      ],
    ]
  ];
}

/**
 * Implements hook_field_formatter_info().
 */
function palom_field_multi_date_field_formatter_info() {
  return [
    'palom_multi_date_formatter' => [
      'label' => t('A multidate formatter for palomniki.su'),
      'field types' => ['date', 'datestamp', 'datetime'],
    ]
  ];
}

/**
 * Implements hook_field_widget_form().
 */
function palom_field_multi_date_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $base = $element;
  switch($instance['widget']['type']){
    case 'palom_multi_date_widget':
      $palom_dates = [];
      foreach($items as $item){
        $palom_dates[] = $item['value'];
      }
      $field_name = $field['field_name'];

      $palom_multi_date_widget_settings = [
        $field_name => [
          'dates' => $palom_dates,
          'cardinality' => $field['cardinality'],
        ]
      ];

      $element['dates'] = [
        '#type' => 'fieldset',
        '#tree' => TRUE,
        '#title' => $instance['label'],
        '#description' => $instance['description'],
      ];

      $element['dates']['dates_array'] = [
        '#type' => 'hidden',
      ];

      $element['dates']['dates_widget'] = [
        '#theme' => 'palom_multi_date_widget',
        '#field_name' => $field_name,
      ];

      $element['#element_validate'] = ['_palom_field_multi_date_element_validate'];

      drupal_add_library('system', 'ui.datepicker');
      drupal_add_library('system', 'ui.dialog');

      libraries_load('sprintf');
      $element['#attached']['css'][] = drupal_get_path('module', 'palom_field_multi_date').'/palom_multi_date_widget.css';
      $element['#attached']['js'][] = drupal_get_path('module', 'palom_field_multi_date').'/palom_multi_date_widget.js';

      // Pass params to the widget
      drupal_add_js(['palom_multi_date_widget' => $palom_multi_date_widget_settings], 'setting');
      break;
  };
  return $element;
}

/*
 * The converting result into the values array
 */
function _palom_field_multi_date_element_validate($element, &$form_state){
  $values = $element['dates']['dates_array']['#value'];
  $language = $element['#language'];
  $field_name = $element['#field_name'];

  $ret_values = [];

//  $stDates = trim($values[$field_name][$language]['dates']['dates_array']);
  $stDates = trim($values);
  $dates = explode(" ", $stDates);
  if ($stDates != '') {
    foreach ($dates as $one_date) {
      $date = [
        'value' => $one_date.' 00:00:00',
        'show_todate' => false,
        'timezone' => 'UTC',
        'offset' => 0,
        'offset2' => 0,
        'value2' => $one_date.' 00:00:00',
      ];
      $ret_values[] = $date;
    };
  }

  form_set_value($element, $ret_values, $form_state);
}


/**
 * Implements hook_field_is_empty().
 */
function palom_field_multi_date_field_is_empty($item, $field) {
  return empty($item['value']);
}

/**
 * Implements hook_field_formatter_view().
 */
function palom_field_multi_date_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = [];
  $settings = $display['settings'];
  switch ($display['type']){
    case 'palom_multi_date_formatter':
      foreach ($items as $delta => $item){
        $date = DateTime::createFromFormat('Y-m-d h:i:s', $item['value']);
        $date_str = $date->format('d.m.Y');
        $el = '';
        switch ($date_str){
          case '01.01.2500':
            $el = t('Travel by demand');
            break;
          case '01.01.2600':
            $el = t('Travel by picking of the group');
            break;
          default:
            $el = $date_str;
            break;
        }
        $element[$delta] = [
          '#type' => 'markup',
          '#markup' => '<span>'.$el.'</span>',
        ];
      }
  }
  return $element;
}

/**
 * Implements hook_theme().
 */
function palom_field_multi_date_theme($existing, $type, $theme, $path) {
  return [
    'palom_multi_date_widget' => [
      'variables' => [
        'field_name' => null,
      ],
      'template' => 'palom-multi-date-widget',
    ],
    'palom_multi_date_formatter' => [
      'render element' => 'element',
      'template' => 'palom-multi-date-formatter',
    ]
  ];
}