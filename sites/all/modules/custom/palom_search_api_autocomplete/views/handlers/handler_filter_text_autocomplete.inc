<?php

class SearchApiViewsHandlerFilterTextAutocomplete extends SearchApiViewsHandlerFilterText {

  public function operator_options() {
    $options = parent::operator_options();
    $options['like'] = t('Fragment');
    return $options;
  }

  public function query() {
    if ($this->operator === 'like') {
      while (is_array($this->value)) {
        $this->value = $this->value ? reset($this->value) : NULL;
      }
      $this->query->condition($this->real_field, '%' . db_like(drupal_strtolower($this->value)) . '%', 'LIKE', $this->options['group']);
    }
    else {
      parent::query();
    }
  }


  public function value_form(&$form, &$form_state) {
    parent::value_form($form, $form_state); // TODO: Change the autogenerated stub

    $view_args = !empty($this->view->args) ? implode('||', $this->view->args) : 0;
    $form['value']['#autocomplete_path'] = 'palom_search_api_autocomplete_filter/' . $this->options['id'] . '/' . $this->view->name . '/' . $this->view->current_display . '/' . $view_args;

    // Add JS script with core autocomplete overrides to the end of JS files
    // list to be sure it is added after the "misc/autocomplete.js" file. Also
    // mark the field with special class.
    if (!empty($this->options['expose']['autocomplete_dependent'])) {
      $file_path = drupal_get_path('module', 'views_autocomplete_filters') . '/js/views-autocomplete-filters-dependent.js';
      drupal_add_js($file_path, array(
        'weight' => 99,
      ));

      $form['value']['#attributes']['class'][] = 'views-ac-dependent-filter';
    }
  }

}